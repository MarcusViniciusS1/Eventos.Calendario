package com.eventos.calendario.service;

import com.eventos.calendario.model.Evento;
import com.eventos.calendario.repository.EventoRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.time.LocalDate;
import java.time.LocalTime;

@Service
@RequiredArgsConstructor
@Transactional
public class DataInitializationService {
    
    private final EventoRepository eventoRepository;
    
    public void criarEventosExemplo() {
        try {
            // Verificar se j√° existem eventos
            long totalEventos = eventoRepository.count();
            
            if (totalEventos == 0) {
                System.out.println("üéØ Criando eventos de exemplo...");
                
                // Criar eventos de exemplo
                Evento[] eventosExemplo = {
                    new Evento(
                        "Workshop de Spring Boot",
                        "Aprenda a desenvolver APIs REST com Spring Boot do zero ao avan√ßado. Curso pr√°tico com exemplos reais.",
                        LocalDate.of(2024, 12, 20),
                        LocalTime.of(14, 0),
                        "Centro de Conven√ß√µes - Sala A",
                        "Tech Academy"
                    ),
                    new Evento(
                        "Confer√™ncia de Microservi√ßos",
                        "Arquitetura de microservi√ßos na pr√°tica: padr√µes, ferramentas e melhores pr√°ticas para sistemas distribu√≠dos.",
                        LocalDate.of(2024, 12, 22),
                        LocalTime.of(9, 0),
                        "Audit√≥rio Principal",
                        "DevOps Institute"
                    ),
                    new Evento(
                        "Meetup de Desenvolvedores Java",
                        "Networking e troca de experi√™ncias entre desenvolvedores Java. Apresenta√ß√µes sobre as √∫ltimas novidades da linguagem.",
                        LocalDate.of(2024, 12, 25),
                        LocalTime.of(19, 0),
                        "Coworking Space Downtown",
                        "Java Community"
                    ),
                    new Evento(
                        "Curso de PostgreSQL Avan√ßado",
                        "Banco de dados avan√ßado com PostgreSQL: otimiza√ß√£o, √≠ndices, procedures e administra√ß√£o de banco.",
                        LocalDate.of(2025, 1, 15),
                        LocalTime.of(8, 30),
                        "Laborat√≥rio de Inform√°tica",
                        "Database Academy"
                    ),
                    new Evento(
                        "Hackathon 2025",
                        "Competi√ß√£o de desenvolvimento de software de 48 horas. Pr√™mios para as melhores solu√ß√µes inovadoras.",
                        LocalDate.of(2025, 1, 20),
                        LocalTime.of(8, 0),
                        "Campus Universit√°rio",
                        "Innovation Hub"
                    ),
                    new Evento(
                        "Workshop de React e TypeScript",
                        "Desenvolvimento frontend moderno com React, TypeScript e melhores pr√°ticas de desenvolvimento.",
                        LocalDate.of(2025, 2, 5),
                        LocalTime.of(14, 0),
                        "Centro de Treinamento Tech",
                        "Frontend Masters"
                    )
                };
                
                for (Evento evento : eventosExemplo) {
                    Evento eventoSalvo = eventoRepository.save(evento);
                    System.out.println("‚úÖ Evento criado: " + eventoSalvo.getTitulo() + " (ID: " + eventoSalvo.getId() + ")");
                }
                
                System.out.println("üéâ " + eventosExemplo.length + " eventos de exemplo criados com sucesso!");
                
            } else {
                System.out.println("‚ÑπÔ∏è J√° existem " + totalEventos + " eventos no banco de dados");
            }
            
        } catch (Exception e) {
            System.err.println("‚ùå Erro ao criar eventos de exemplo: " + e.getMessage());
            e.printStackTrace();
        }
    }
}